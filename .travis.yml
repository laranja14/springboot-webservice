language: java
jdk:
  - openjdk8
branches:
  only:
    - master
        
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'
before_install:
  - chmod +x ./gradlew
script: "./gradlew clean build"

before_deploy:
    #- zip -r springboot-webservice *
    #- mkdir -p deploy
    #- mv springboot-webservice.zip deploy/springboot-webservice.zip
    
    # before-deploy는 배포 파일만 선별
    - mkdir -p before-deploy
    - cp scripts/*.sh before-deploy/       # deploy.sh
    - cp appspec.yml before-deploy/        # apspec.yml - codedeploy 설정
    - cp build/libs/*.war before-deploy/   # springboot-webservice-xxx.war 
    
    - cd before-deploy && zip -r before-deploy *
    
    - cd .. && mkdir -p deploy
    - mv before-deploy/before-deploy.zip deploy/springboot-webservice.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $ACCESS_SECRET_KEY
    bucket: a1student14-apringboot-webservice # S3 버킷 이름
    region: eu-west-1
    skip_cleanup: true
    acl: private
    local_dir: deploy
    wait-until-deployed: true
    
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $ACCESS_SECRET_KEY
    bucket: a1student14-apringboot-webservice
    key: springboot-webservice.zip
    bundle_type: zip
    application: springboot-webservice
    deployment_group: springboot-webservice-group
    region: eu-west-1
    wait-until-deployed: true
    
notification:
  email:
    recipients:
      - laranja1419@gmail.com
    